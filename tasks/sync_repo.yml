---
- name: Check if a directory exist
  file:
    path: '{{ dci_retrieve_component_local_repo }}/{{ component_name }}'
    state: directory
  become: True

- name: Get repomd.xml
  uri:
    client_cert: '{{ dci_retrieve_component_sslclientcert }}'
    client_key: '{{ dci_retrieve_component_sslclientkey }}'
    return_content: yes
    url: '{{ dci_retrieve_component_repo_url }}/{{ _topic.topic.product_id }}/{{ _topic.topic.id }}/{{ _component.component.id }}/repodata/repomd.xml'
    validate_certs: '{{ dci_retrieve_component_sslverify }}'
  register: repomd
  become: True

- name: Get Primary URL
  xml:
    xmlstring: '{{ repomd.content }}'
    xpath: /x:repomd/x:data[@type='primary']/x:location
    namespaces:
      x: http://linux.duke.edu/metadata/repo
    attribute: x:href
    content: attribute
  register: primary

- name: Download Primary
  get_url:
    client_cert: '{{ dci_retrieve_component_sslclientcert }}'
    client_key: '{{ dci_retrieve_component_sslclientkey }}'
    dest: /tmp/test.xml.gz
    url: '{{ dci_retrieve_component_repo_url }}/{{ _topic.topic.product_id }}/{{ _topic.topic.id }}/{{ _component.component.id }}/{{ primary.matches[0].values()[0].href }}'
    validate_certs: '{{ dci_retrieve_component_sslverify }}'
    force: yes
  become: True
  register: primary_file

- name: Decompress the Primary file
  shell: gunzip -f -c /tmp/test.xml.gz > /tmp/test.xml
  become: True
  when: primary_file.changed

- name: Cleanup RPMs
  shell: ./cleanup_repo.py {{ dci_retrieve_component_local_repo }}/{{ component_name }}
  args:
    chdir: "{{ role_path }}/files"
  become: True

- name: Syncing remote repository to local directory
  shell: reposync --arch={{ dci_retrieve_component_arch }} --repoid={{ component_name }} -l -m --download-meta -n -d -p "{{ dci_retrieve_component_local_repo }}/"
  become: True

- name: Check if a group file exist
  stat:
    path: '{{ dci_retrieve_component_local_repo }}/{{ component_name }}/comps.xml'
  register: comps
  become: True

- name: Running createrepo locally
  shell: createrepo --update {% if comps.stat.exists %}-g comps.xml{% endif %} "{{ dci_retrieve_component_local_repo }}/{{ component_name }}"
  args:
    chdir: "{{ dci_retrieve_component_local_repo }}/"
  become: True
